//
// This file was generated by the Eclipse Implementation of JAXB, v4.0.5 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
//


package ch.supertomcat.videopreview.settingsconfig;

import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlSchemaType;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for GUISettings complex type</p>.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.</p>
 * 
 * <pre>{@code
 * <complexType name="GUISettings">
 *   <complexContent>
 *     <restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       <sequence>
 *         <element name="lookAndFeel" type="{}LookAndFeelSetting"/>
 *         <element name="selectedMainTemplate" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         <element name="selectedFooterTemplate" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         <element name="mainWindow" type="{}WindowSettings"/>
 *       </sequence>
 *     </restriction>
 *   </complexContent>
 * </complexType>
 * }</pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "GUISettings", propOrder = {
    "lookAndFeel",
    "selectedMainTemplate",
    "selectedFooterTemplate",
    "mainWindow"
})
public class GUISettings {

    @XmlElement(required = true, defaultValue = "LAF_OS")
    @XmlSchemaType(name = "string")
    protected LookAndFeelSetting lookAndFeel;
    @XmlElement(required = true, nillable = true)
    protected String selectedMainTemplate;
    @XmlElement(required = true, nillable = true)
    protected String selectedFooterTemplate;
    @XmlElement(required = true)
    protected WindowSettings mainWindow;

    /**
     * Gets the value of the lookAndFeel property.
     * 
     * @return
     *     possible object is
     *     {@link LookAndFeelSetting }
     *     
     */
    public LookAndFeelSetting getLookAndFeel() {
        return lookAndFeel;
    }

    /**
     * Sets the value of the lookAndFeel property.
     * 
     * @param value
     *     allowed object is
     *     {@link LookAndFeelSetting }
     *     
     */
    public void setLookAndFeel(LookAndFeelSetting value) {
        this.lookAndFeel = value;
    }

    /**
     * Gets the value of the selectedMainTemplate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSelectedMainTemplate() {
        return selectedMainTemplate;
    }

    /**
     * Sets the value of the selectedMainTemplate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSelectedMainTemplate(String value) {
        this.selectedMainTemplate = value;
    }

    /**
     * Gets the value of the selectedFooterTemplate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getSelectedFooterTemplate() {
        return selectedFooterTemplate;
    }

    /**
     * Sets the value of the selectedFooterTemplate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setSelectedFooterTemplate(String value) {
        this.selectedFooterTemplate = value;
    }

    /**
     * Gets the value of the mainWindow property.
     * 
     * @return
     *     possible object is
     *     {@link WindowSettings }
     *     
     */
    public WindowSettings getMainWindow() {
        return mainWindow;
    }

    /**
     * Sets the value of the mainWindow property.
     * 
     * @param value
     *     allowed object is
     *     {@link WindowSettings }
     *     
     */
    public void setMainWindow(WindowSettings value) {
        this.mainWindow = value;
    }

}
